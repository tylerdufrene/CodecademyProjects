import familiar
from scipy.stats import ttest_1samp
from scipy.stats import ttest_ind
from scipy.stats import chi2_contingency

vein_pack_lifespans = familiar.lifespans(package= 'vein')

vein_pack_test = ttest_1samp(vein_pack_lifespans, 71)
print vein_pack_test
print('----------------------------')

def x(vein_pack_test):
  if vein_pack_test.pvalue < 0.05:
    print('The Vein Pack Is Proven To Make You Live Longer')
  else:
    print('The Vein Pack Is Probably Good For You Somehow')
print(x(vein_pack_test))
print('----------------------------')

artery_pack_lifespans = familiar.lifespans(package = 'artery')
package_comparison_results = ttest_ind(artery_pack_lifespans, vein_pack_lifespans)
def y(package_comparison_results):
  if package_comparison_results.pvalue < 0.05:
    print('The Artery Package guarantees even stronger results')
  else:
    print('The Artery Package is also a great product')
    
print(y(package_comparison_results))
print('----------------------------')

iron_contingency_table = familiar.iron_counts_for_package()
chi2, iron_pvalue, dof, expected = chi2_contingency(iron_contingency_table)

def z(iron_pvalue):
  if iron_pvalue < 0.05:
    print('The Artery Package Is Proven To Make You Healthier')
  else:
    print('While We Can"t Say the Artery Package Will Help You, I Bet It"s Nice!')

print(z(iron_pvalue))
